<!--
STRUCTURE:

<tests>
	<chapter id = "Chapter Name">
		<questions>
                        <question>
                                <statement></statement>
                                <answer id = "correct"></answer>
                                <answer></answer>
                                <answer></answer>
                                <answer></answer>
                        </question>
                </questions>
	</chapter>
</tests>

-->
<tests>
        <chapter id = "Operators">
                <questions>
                        <question>
                                <statement>How is 0 different from "0"?</statement>
                                <answer id = "correct"> "0" is a string, 0 is an int</answer>
                                <answer>"0" is an int, 0 is a string</answer>
                                <answer>There is no difference</answer>
                                <answer>"0" is a double, 0 is a int</answer>
                        </question>
                        <question>
                                <level>3</level>
                                <written>true</written>
                                <statement>```//Variables
### var1 = 0.54;
### var2 = 0.43;
### var3 = 43;
### var4 = 'c';```

Assign the proper data-types to these values</statement>
                                <answer id = "correct">double</answer>
                                <answer id = "correct">double</answer>
                                <answer id = "correct">int</answer>
                                <answer id = "correct">char</answer>
                        </question>
                        <question>
                                <level>3</level>
                                <written>true</written>
                                <statement>```//This value will hold the amount of money the user will have
### money;

//This value will hold the ID of the user
### id;

//This value will hold the initials of the user
### initials;

//This value will hold the letter of the division the user works at
### divisionLetter;```

Assign the proper data-types to these values</statement>
                                <answer id = "correct">double</answer>
                                <answer id = "correct">int</answer>
                                <answer id = "correct">String</answer>
                                <answer id = "correct">char</answer>
                        </question>
                        <question>
                                <level>3</level>
                                <written>true</written>
                                <statement>```//This value will hold the total sales of the store
### sales;

//This value will hold the store's street number
### sNum;

//This value will hold the number of shirts in the store
### numShirts;

//This value will hold the letter grade of the store in reviews
### grade;```

Assign the proper data-types to these values</statement>
                                <answer id = "correct">double</answer>
                                <answer id = "correct">int</answer>
                                <answer id = "correct">int</answer>
                                <answer id = "correct">char</answer>
                        </question>
                        <question>
                                <level>3</level>
                                <written>true</written>
                                <statement>```//This value will be used to sum two decimals
### sum;

//This value will hold the product of the two decimals
### product;

//This value will hold the remainder of two numbers
### remainder;

//This value will hold a random alphabet value
### alphabetValue;```

Assign the proper data-types to these values</statement>
                                <answer id = "correct">double</answer>
                                <answer id = "correct">double</answer>
                                <answer id = "correct">int</answer>
                                <answer id = "correct">char</answer>
                        </question>
                </questions>
        </chapter>
        <chapter id = "Escape Sequences">
            <questions>
                <question>
                    <level>3</level>
                    <written>true</written>
                    <statement>```String s = "This line ###Needs a new line here ###And here ###And here";```
How would you make new lines at requested?</statement>
                    <answer id = "correct">\n</answer>
                    <answer id = "correct">\n</answer>
                    <answer id = "correct">\n</answer>
                </question>
            </questions>
        </chapter>
        <chapter id = "Control Statements">
            <questions>
                <question>
                    <level>3</level>
                    <written>true</written>
                    <statement>```Scanner sc = new ###
String s = sc.###```
Fill in the blanks</statement>
                    <answer id = "correct">Scanner(System.in);</answer>
                    <answer id = "correct">nextLine();</answer>
                </question>
            </questions>
        </chapter>
        <chapter id = "Interfaces">
            <questions>
                <question>
                    <level>3</level>
                    <written>true</written>
                    <statement>```//Create a new interface
public ### myInterface(){
    //All implements of interface should include void method to display the values in the class
    public ### display()###

    //All implements of interface should include method to return an int sum
    public ### getSum()###
}```
Fill in the blanks</statement>
                    <answer id = "correct">interface;</answer>
                    <answer id = "correct">void</answer>
                    <answer id = "correct">;</answer>
                    <answer id = "correct">int</answer>
                    <answer id = "correct">;</answer>
                </question>
            </questions>
        </chapter>
        <chapter id = "Packages">
            <questions>
                <question>
                    <level>4</level>
                    <written>true</written>
                    <statement>```//For a generic exception
###{
    //Code
}
###(### e){
    //Code
}```
Fill in the blanks</statement>
                    <answer id = "correct">try;</answer>
                    <answer id = "correct">catch</answer>
                    <answer id = "correct">Exception</answer>
                </question>
            </questions>
        </chapter>
</tests>